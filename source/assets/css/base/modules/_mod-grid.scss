/* != Framework Module - Grid */


@mixin gridBase {
  @if $legacy == false {
    display:flex;
  }
}

%gridBase {
  @include gridBase;
}

// gridList - List of items that wrap onto multiple lines
@mixin gridList {
  @if $legacy {
    float:left;
    width: 100%;

    > * {
      float: left;
    }
  } @else {
    flex-wrap:wrap;
    align-items:stretch;
  }
}

%gridList {
  @include gridList; 
}

// gridRow - Row of items that don't wrap
@mixin gridRow {
  @if $legacy {
    display: table;
    width: 100%;
  } @else {
    align-items:stretch;
  }

  > * {
    //flex:1 1 auto;
    @if $legacy {
      display:table-cell;
      vertical-align: top;
    }
  }
}

// naturalGridRow - Row of items that don't wrap and also don't stretch vertically
@mixin gridNaturalRow {
  @if $legacy {
    width: 100%;
  } @else {
    align-items:flex-start;
  }

  > * {
    @if $legacy {
      display: inline-block;
    } @else {
      //display: inline-block;
    }
  }
}

@mixin gridNaturalAlignment {
  @if $legacy == false {
    align-items: flex-start;
  }
}

// gridCol - Flexbox column of items
@mixin gridCol {
  @if $legacy {
    > * {
      display: block;
    }
  } @else {
    flex-direction:column;
  }
}

%gridCol {
  @include gridCol;
}

// gridCentreContent - Flex item that centres content vertically and horizontally
@mixin gridCentreContent {
  @if $legacy {
    //display: block;

    > * {
      max-width:100%;
      display: block;
    }
  } @else {
    justify-content:center;
    align-items:center;
    flex-direction: column;

    > * {
      max-width:100%;
    }
  }
}

// gridTwoCols - Two Column layout with primary and secondary content
@mixin gridTwoCols {
  @if $legacy {
    width: 100%;
    @include clearfix;
  } @else {
    order:1;
  }

  .gd_Pri,
  .gd_Sec {
    display: block;
    padding:0 8px;
  }

  .gd_Pri {
    width: 66.666%;

    @if $legacy {
      float: right;
    } @else {
      order:2;
    }
  }

  .gd_Sec {
    width: 33.333%;
    //order:3;
  }

  // Switch to single column w/ Primary content ordered first
  @include mq($bpHan){
    flex-direction:column;

    .gd_Pri,
    .gd_Sec {
      width: 100%;
    }

    .gd_Pri {
      //margin-bottom: em(32);
    }

    .gd_Sec {
      order:3;
    }
  }
}

// gridFooter - Flex component that sits at the bottom of a list of items, clearing them all
@mixin gridFooter {
  width: 100%;
  display:inline-block;

  @if $legacy {
    clear: both;
  } @else {
    flex:0 0 100%;
  }
}
