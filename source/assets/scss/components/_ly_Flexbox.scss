/* != Grid - Flexbox-based w/ legacy fallbacks */

[class*=gd_] {
  @include gridBase;
}

// Controls the layout of a list of Promo components
.gd_Promos,
.gd_List {
  @include gridList;
}

// Simple row of elements
.gd_Group {
  @include gridRow;
}

.gd_NaturalGroup {
  @include gridNaturalRow;
}

.gd_Fill {
  @if $legacy == false {
    align-items: stretch;
  }
}

.gd_Natural {
  @include gridNaturalAlignment;
}

// Pair of elements that switch from row to col several times
.gd_Group--pair {
  > * {
    width: 50%;
  }
}

// Pair of elements in a Primary content container
.gd_Group--primaryPair {

}


// Controls the layout of a Spotlight when in a grid of purely Spotlight components
.gd_Spotlight {
  > * {
    width:50%;
    max-width:100%;
  }

  // @include mq($bpPoe){
  //   @include gridCol;
  //
  //   > * {
  //     width: 50vw;
  //     max-width:100%;
  //   }
  //
  //   .media__image {
  //     padding-top: 50vw;
  //   }
  //
  //   .media__details {
  //     flex-grow:1;
  //   }
  // }
}

.gd_Promos {

}

// Controls the layout of a Spotlight when in a mixed grid of media components
.gd_SpotlightInMix {
  > * {
    width:25vw;
  }
}

.gd_Content {
  @if $legacy == false {
    @include gridCol;

    &--last {
      justify-content:flex-end;
    }
  }
}

.gd_Overlay {
  @include gridCentreContent;
}

.gd_Footer {
  @include gridFooter;
}

.gd_PriSec {
  @include gridTwoCols;
  margin-bottom: 38px;
}
